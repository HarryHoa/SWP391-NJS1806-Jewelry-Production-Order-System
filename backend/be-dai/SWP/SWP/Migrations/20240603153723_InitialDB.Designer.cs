// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SWP.Models;

#nullable disable

namespace SWP.Migrations
{
    [DbContext(typeof(JeweleryOrderproductionContext))]
    [Migration("20240603153723_InitialDB")]
    partial class InitialDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SWP.Models.CustomerDetail", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<string>("AddressLine")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address_line");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("birth_date");

                    b.Property<string>("DistrictTown")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("district_town");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)")
                        .HasColumnName("last_name");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("province");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("sex");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("CustomerId")
                        .HasName("PK__Customer__CD65CB855B8D1085");

                    b.HasIndex(new[] { "UserId" }, "UQ__Customer__B9BE370E9EF1BC73")
                        .IsUnique();

                    b.ToTable("Customer_Detail", (string)null);
                });

            modelBuilder.Entity("SWP.Models.Design", b =>
                {
                    b.Property<int>("DesignId")
                        .HasColumnType("int")
                        .HasColumnName("design_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateOnly>("DesignatedCompletion")
                        .HasColumnType("date")
                        .HasColumnName("designated_completion");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_completed");

                    b.Property<int>("OrderCustomId")
                        .HasColumnType("int")
                        .HasColumnName("order_custom_id");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.HasKey("DesignId")
                        .HasName("PK__Design__1BA5C3FB8182DA93");

                    b.HasIndex("OrderCustomId");

                    b.HasIndex("OrderId");

                    b.ToTable("Design", (string)null);
                });

            modelBuilder.Entity("SWP.Models.DesignImage", b =>
                {
                    b.Property<int>("DesignImageId")
                        .HasColumnType("int")
                        .HasColumnName("design_image_id");

                    b.Property<int>("DesignId")
                        .HasColumnType("int")
                        .HasColumnName("design_id");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image_url");

                    b.HasKey("DesignImageId")
                        .HasName("PK__Design_I__02A18B6926795CAD");

                    b.HasIndex("DesignId");

                    b.ToTable("Design_Images", (string)null);
                });

            modelBuilder.Entity("SWP.Models.Gemstone", b =>
                {
                    b.Property<int>("GemstoneId")
                        .HasColumnType("int")
                        .HasColumnName("gemstone_id");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("color");

                    b.Property<int>("GemstoneCarat")
                        .HasColumnType("int")
                        .HasColumnName("gemstone_carat");

                    b.Property<string>("GemstoneType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("gemstone_type");

                    b.HasKey("GemstoneId")
                        .HasName("PK__Gemstone__08CCD219B4C8628A");

                    b.HasIndex(new[] { "GemstoneType", "GemstoneCarat", "Color" }, "UQ__Gemstone__3E7282755B039692")
                        .IsUnique()
                        .HasFilter("[color] IS NOT NULL");

                    b.ToTable("Gemstone", (string)null);
                });

            modelBuilder.Entity("SWP.Models.Metal", b =>
                {
                    b.Property<int>("MetalId")
                        .HasColumnType("int")
                        .HasColumnName("metal_id");

                    b.Property<string>("MetalTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("metal_type_name");

                    b.HasKey("MetalId")
                        .HasName("PK__Metals__15EB863C6E37089E");

                    b.HasIndex(new[] { "MetalTypeName" }, "UQ__Metals__EC08308C43F7F071")
                        .IsUnique();

                    b.ToTable("Metals");
                });

            modelBuilder.Entity("SWP.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<bool>("IsCustom")
                        .HasColumnType("bit")
                        .HasColumnName("is_custom");

                    b.Property<bool>("IsShipment")
                        .HasColumnType("bit")
                        .HasColumnName("is_shipment");

                    b.Property<DateOnly>("OrderDate")
                        .HasColumnType("date")
                        .HasColumnName("order_date");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("order_status");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("payment_status");

                    b.HasKey("OrderId")
                        .HasName("PK__Orders__4659622999F1E697");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SWP.Models.OrderCustomItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .HasColumnType("int")
                        .HasColumnName("order_item_id");

                    b.Property<int>("GemstoneId")
                        .HasColumnType("int")
                        .HasColumnName("gemstone_id");

                    b.Property<int>("MetalId")
                        .HasColumnType("int")
                        .HasColumnName("metal_id");

                    b.Property<DateOnly>("OrderDate")
                        .HasColumnType("date")
                        .HasColumnName("order_date");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<int?>("Size")
                        .HasColumnType("int")
                        .HasColumnName("size");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("subtotal");

                    b.HasKey("OrderItemId")
                        .HasName("PK__Order_Cu__3764B6BC2CCD94E9");

                    b.HasIndex("GemstoneId");

                    b.HasIndex("MetalId");

                    b.HasIndex(new[] { "OrderId", "GemstoneId", "MetalId", "Size" }, "UQ__Order_Cu__1502BCB8A4D05A65")
                        .IsUnique()
                        .HasFilter("[size] IS NOT NULL");

                    b.ToTable("Order_Custom_Items", (string)null);
                });

            modelBuilder.Entity("SWP.Models.OrderFixedItem", b =>
                {
                    b.Property<int>("OrderFixedItemId")
                        .HasColumnType("int")
                        .HasColumnName("order_fixed_item_id");

                    b.Property<DateOnly>("OrderDate")
                        .HasColumnType("date")
                        .HasColumnName("order_date");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<int>("ProductStockId")
                        .HasColumnType("int")
                        .HasColumnName("product_stock_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("subtotal");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("unit_price");

                    b.HasKey("OrderFixedItemId")
                        .HasName("PK__Order_Fi__A0C3DD8679DDAB5C");

                    b.HasIndex("ProductStockId");

                    b.HasIndex(new[] { "OrderId", "ProductStockId" }, "UQ__Order_Fi__14E50BC22BF723AF")
                        .IsUnique();

                    b.ToTable("Order_Fixed_Items", (string)null);
                });

            modelBuilder.Entity("SWP.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<bool>("InStock")
                        .HasColumnType("bit")
                        .HasColumnName("inStock");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("text")
                        .HasColumnName("product_description");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("product_name");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int")
                        .HasColumnName("product_type_id");

                    b.HasKey("ProductId")
                        .HasName("PK__Product__47027DF54DE36A2B");

                    b.HasIndex("ProductTypeId");

                    b.HasIndex(new[] { "ProductName" }, "UQ__Product__2B5A6A5FE4B19AE4")
                        .IsUnique();

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("SWP.Models.ProductImage", b =>
                {
                    b.Property<int>("ProductImageId")
                        .HasColumnType("int")
                        .HasColumnName("product_image_id");

                    b.Property<string>("Alt")
                        .HasColumnType("text")
                        .HasColumnName("alt");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image_url");

                    b.Property<int>("ProductStockId")
                        .HasColumnType("int")
                        .HasColumnName("product_stock_id");

                    b.HasKey("ProductImageId")
                        .HasName("PK__Product___0302EB4AF2F8AFFE");

                    b.HasIndex("ProductStockId");

                    b.ToTable("Product_Images", (string)null);
                });

            modelBuilder.Entity("SWP.Models.ProductStock", b =>
                {
                    b.Property<int>("ProductStockId")
                        .HasColumnType("int")
                        .HasColumnName("product_stock_id");

                    b.Property<string>("GalleryUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("gallery_url");

                    b.Property<int>("GemstoneId")
                        .HasColumnType("int")
                        .HasColumnName("gemstone_id");

                    b.Property<int>("MetalId")
                        .HasColumnType("int")
                        .HasColumnName("metal_id");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int?>("Size")
                        .HasColumnType("int")
                        .HasColumnName("size");

                    b.Property<int?>("StockQuantity")
                        .HasColumnType("int")
                        .HasColumnName("stock_quantity");

                    b.HasKey("ProductStockId")
                        .HasName("PK__Product___2BC69EA41FAFC564");

                    b.HasIndex("GemstoneId");

                    b.HasIndex("MetalId");

                    b.HasIndex(new[] { "ProductId", "GemstoneId", "MetalId", "Size" }, "UQ__Product___1459A3643DCC9F5F")
                        .IsUnique()
                        .HasFilter("[size] IS NOT NULL");

                    b.ToTable("Product_Stock", (string)null);
                });

            modelBuilder.Entity("SWP.Models.ProductType", b =>
                {
                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int")
                        .HasColumnName("product_type_id");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type_name");

                    b.HasKey("ProductTypeId")
                        .HasName("PK__Product___6EED3ED64EB51537");

                    b.HasIndex(new[] { "TypeName" }, "UQ__Product___543C4FD90D04233B")
                        .IsUnique();

                    b.ToTable("Product_Types", (string)null);
                });

            modelBuilder.Entity("SWP.Models.ProductionStatus", b =>
                {
                    b.Property<int>("ProductionStatusId")
                        .HasColumnType("int")
                        .HasColumnName("production_status_id");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status_name");

                    b.HasKey("ProductionStatusId")
                        .HasName("PK__Producti__182287F39490BF05");

                    b.HasIndex(new[] { "StatusName" }, "UQ__Producti__501B3753D1493DCE")
                        .IsUnique();

                    b.ToTable("Production_Status", (string)null);
                });

            modelBuilder.Entity("SWP.Models.ProductionTracking", b =>
                {
                    b.Property<int>("ProductionId")
                        .HasColumnType("int")
                        .HasColumnName("production_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("ProductionStatusId")
                        .HasColumnType("int")
                        .HasColumnName("production_status_id");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.HasKey("ProductionId")
                        .HasName("PK__Producti__60F4D65CF905F3F5");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductionStatusId");

                    b.ToTable("Production_Tracking", (string)null);
                });

            modelBuilder.Entity("SWP.Models.Quote", b =>
                {
                    b.Property<int>("QuoteId")
                        .HasColumnType("int")
                        .HasColumnName("quote_id");

                    b.Property<decimal?>("CaratCost")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("carat_cost");

                    b.Property<decimal?>("CaratPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("carat_price");

                    b.Property<DateOnly>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("created_date");

                    b.Property<decimal?>("MetalCost")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("metal_cost");

                    b.Property<decimal?>("MetalWeight")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("metal_weight");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<decimal?>("ProductionCost")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("production_cost");

                    b.Property<decimal?>("QuoteTotalPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("quote_total_price");

                    b.HasKey("QuoteId")
                        .HasName("PK__Quote__0D37DF0C91D4D5C0");

                    b.HasIndex("OrderId");

                    b.ToTable("Quote", (string)null);
                });

            modelBuilder.Entity("SWP.Models.RequestImage", b =>
                {
                    b.Property<int>("RequestImageId")
                        .HasColumnType("int")
                        .HasColumnName("request_image_id");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image_url");

                    b.Property<int>("OrderCustomId")
                        .HasColumnType("int")
                        .HasColumnName("order_custom_id");

                    b.HasKey("RequestImageId")
                        .HasName("PK__Request___4212A850F3B7F7AB");

                    b.HasIndex("OrderCustomId");

                    b.ToTable("Request_Images", (string)null);
                });

            modelBuilder.Entity("SWP.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .HasColumnType("int")
                        .HasColumnName("review_id");

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.HasKey("ReviewId")
                        .HasName("PK__Review__60883D903A6B39C4");

                    b.HasIndex("ProductId");

                    b.ToTable("Review", (string)null);
                });

            modelBuilder.Entity("SWP.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("role_name");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__760965CCC59BF9B7");

                    b.HasIndex(new[] { "RoleName" }, "UQ__Roles__783254B17050B150")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SWP.Models.Shipment", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<bool>("IsShipping")
                        .HasColumnType("bit")
                        .HasColumnName("is_shipping");

                    b.Property<DateOnly>("ShipmentDate")
                        .HasColumnType("date")
                        .HasColumnName("shipment_date");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("shipping_address");

                    b.Property<string>("ShippingDistrict")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("shipping_district");

                    b.Property<decimal>("ShippingFee")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("shipping_fee");

                    b.Property<string>("ShippingProvince")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("shipping_province");

                    b.HasKey("OrderId")
                        .HasName("PK__Shipment__465962297EAC6C8F");

                    b.ToTable("Shipment", (string)null);
                });

            modelBuilder.Entity("SWP.Models.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<string>("StatusDetail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status_detail");

                    b.HasKey("StatusId")
                        .HasName("PK__Status__3683B531D0B89EFE");

                    b.HasIndex(new[] { "StatusDetail" }, "UQ__Status__1433E42087066EA0")
                        .IsUnique();

                    b.ToTable("Status", (string)null);
                });

            modelBuilder.Entity("SWP.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .HasColumnType("int")
                        .HasColumnName("transaction_id");

                    b.Property<bool>("IsDeposit")
                        .HasColumnType("bit")
                        .HasColumnName("is_deposit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<string>("PaymentType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("payment_type");

                    b.Property<DateOnly>("TransactionDate")
                        .HasColumnType("date")
                        .HasColumnName("transaction_date");

                    b.Property<decimal>("TransactionTotal")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("transaction_total");

                    b.HasKey("TransactionId")
                        .HasName("PK__Transact__85C600AF92E97911");

                    b.HasIndex("OrderId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("SWP.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<DateOnly>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("created_date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("phone");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.HasKey("UserId")
                        .HasName("PK__User__B9BE370F1C6E8636");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Email" }, "UQ__User__AB6E6164B7A7907E")
                        .IsUnique();

                    b.HasIndex(new[] { "Phone" }, "UQ__User__B43B145FBC022F72")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("SWP.Models.CustomerDetail", b =>
                {
                    b.HasOne("SWP.Models.User", "User")
                        .WithOne("CustomerDetail")
                        .HasForeignKey("SWP.Models.CustomerDetail", "UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Customer___user___2D27B809");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SWP.Models.Design", b =>
                {
                    b.HasOne("SWP.Models.OrderCustomItem", "OrderCustom")
                        .WithMany("Designs")
                        .HasForeignKey("OrderCustomId")
                        .IsRequired()
                        .HasConstraintName("FK__Design__order_cu__5812160E");

                    b.HasOne("SWP.Models.Order", "Order")
                        .WithMany("Designs")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__Design__order_id__59063A47");

                    b.Navigation("Order");

                    b.Navigation("OrderCustom");
                });

            modelBuilder.Entity("SWP.Models.DesignImage", b =>
                {
                    b.HasOne("SWP.Models.Design", "Design")
                        .WithMany("DesignImages")
                        .HasForeignKey("DesignId")
                        .IsRequired()
                        .HasConstraintName("FK__Design_Im__desig__5BE2A6F2");

                    b.Navigation("Design");
                });

            modelBuilder.Entity("SWP.Models.Order", b =>
                {
                    b.HasOne("SWP.Models.CustomerDetail", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__Orders__customer__44FF419A");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("SWP.Models.OrderCustomItem", b =>
                {
                    b.HasOne("SWP.Models.Gemstone", "Gemstone")
                        .WithMany("OrderCustomItems")
                        .HasForeignKey("GemstoneId")
                        .IsRequired()
                        .HasConstraintName("FK__Order_Cus__gemst__4E88ABD4");

                    b.HasOne("SWP.Models.Metal", "Metal")
                        .WithMany("OrderCustomItems")
                        .HasForeignKey("MetalId")
                        .IsRequired()
                        .HasConstraintName("FK__Order_Cus__metal__4F7CD00D");

                    b.HasOne("SWP.Models.Order", "Order")
                        .WithMany("OrderCustomItems")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__Order_Cus__order__4D94879B");

                    b.Navigation("Gemstone");

                    b.Navigation("Metal");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("SWP.Models.OrderFixedItem", b =>
                {
                    b.HasOne("SWP.Models.Order", "Order")
                        .WithMany("OrderFixedItems")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__Order_Fix__order__48CFD27E");

                    b.HasOne("SWP.Models.ProductStock", "ProductStock")
                        .WithMany("OrderFixedItems")
                        .HasForeignKey("ProductStockId")
                        .IsRequired()
                        .HasConstraintName("FK__Order_Fix__produ__49C3F6B7");

                    b.Navigation("Order");

                    b.Navigation("ProductStock");
                });

            modelBuilder.Entity("SWP.Models.Product", b =>
                {
                    b.HasOne("SWP.Models.ProductType", "ProductType")
                        .WithMany("Products")
                        .HasForeignKey("ProductTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__Product__product__36B12243");

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("SWP.Models.ProductImage", b =>
                {
                    b.HasOne("SWP.Models.ProductStock", "ProductStock")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductStockId")
                        .IsRequired()
                        .HasConstraintName("FK__Product_I__produ__619B8048");

                    b.Navigation("ProductStock");
                });

            modelBuilder.Entity("SWP.Models.ProductStock", b =>
                {
                    b.HasOne("SWP.Models.Gemstone", "Gemstone")
                        .WithMany("ProductStocks")
                        .HasForeignKey("GemstoneId")
                        .IsRequired()
                        .HasConstraintName("FK__Product_S__gemst__3E52440B");

                    b.HasOne("SWP.Models.Metal", "Metal")
                        .WithMany("ProductStocks")
                        .HasForeignKey("MetalId")
                        .IsRequired()
                        .HasConstraintName("FK__Product_S__metal__3F466844");

                    b.HasOne("SWP.Models.Product", "Product")
                        .WithMany("ProductStocks")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__Product_S__produ__3D5E1FD2");

                    b.Navigation("Gemstone");

                    b.Navigation("Metal");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SWP.Models.ProductionTracking", b =>
                {
                    b.HasOne("SWP.Models.Product", "Product")
                        .WithMany("ProductionTrackings")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__Productio__produ__6E01572D");

                    b.HasOne("SWP.Models.ProductionStatus", "ProductionStatus")
                        .WithMany("ProductionTrackings")
                        .HasForeignKey("ProductionStatusId")
                        .IsRequired()
                        .HasConstraintName("FK__Productio__produ__6EF57B66");

                    b.Navigation("Product");

                    b.Navigation("ProductionStatus");
                });

            modelBuilder.Entity("SWP.Models.Quote", b =>
                {
                    b.HasOne("SWP.Models.Order", "Order")
                        .WithMany("Quotes")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__Quote__order_id__5535A963");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("SWP.Models.RequestImage", b =>
                {
                    b.HasOne("SWP.Models.OrderCustomItem", "OrderCustom")
                        .WithMany("RequestImages")
                        .HasForeignKey("OrderCustomId")
                        .IsRequired()
                        .HasConstraintName("FK__Request_I__order__5EBF139D");

                    b.Navigation("OrderCustom");
                });

            modelBuilder.Entity("SWP.Models.Review", b =>
                {
                    b.HasOne("SWP.Models.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__Review__product___68487DD7");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SWP.Models.Shipment", b =>
                {
                    b.HasOne("SWP.Models.Order", "Order")
                        .WithOne("Shipment")
                        .HasForeignKey("SWP.Models.Shipment", "OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__Shipment__order___6477ECF3");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("SWP.Models.Transaction", b =>
                {
                    b.HasOne("SWP.Models.Order", "Order")
                        .WithMany("Transactions")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__Transacti__order__52593CB8");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("SWP.Models.User", b =>
                {
                    b.HasOne("SWP.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__User__role_id__29572725");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SWP.Models.CustomerDetail", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("SWP.Models.Design", b =>
                {
                    b.Navigation("DesignImages");
                });

            modelBuilder.Entity("SWP.Models.Gemstone", b =>
                {
                    b.Navigation("OrderCustomItems");

                    b.Navigation("ProductStocks");
                });

            modelBuilder.Entity("SWP.Models.Metal", b =>
                {
                    b.Navigation("OrderCustomItems");

                    b.Navigation("ProductStocks");
                });

            modelBuilder.Entity("SWP.Models.Order", b =>
                {
                    b.Navigation("Designs");

                    b.Navigation("OrderCustomItems");

                    b.Navigation("OrderFixedItems");

                    b.Navigation("Quotes");

                    b.Navigation("Shipment");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("SWP.Models.OrderCustomItem", b =>
                {
                    b.Navigation("Designs");

                    b.Navigation("RequestImages");
                });

            modelBuilder.Entity("SWP.Models.Product", b =>
                {
                    b.Navigation("ProductStocks");

                    b.Navigation("ProductionTrackings");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("SWP.Models.ProductStock", b =>
                {
                    b.Navigation("OrderFixedItems");

                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("SWP.Models.ProductType", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("SWP.Models.ProductionStatus", b =>
                {
                    b.Navigation("ProductionTrackings");
                });

            modelBuilder.Entity("SWP.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("SWP.Models.User", b =>
                {
                    b.Navigation("CustomerDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
